name: CI

on:
  push:
    branches:
      - dev
      - main
    paths-ignore:
      - "docs/**"

  pull_request:
    paths-ignore:
      - "docs/**"

jobs:
  test:
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v3
        with:
          # This allows yarn workspaces --since to compare with origin/main branch
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Why not using setup-node 2.2+ cache option (yet) ?
      # see https://github.com/belgattitude/nextjs-monorepo-example/pull/369
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Restore dx caches
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo
            ${{ github.workspace }}/**/.eslintcache
          key: ${{ runner.os }}-dx-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: |
          yarn install --immutable

      - name: Linter
        run: |
          yarn g:lint

      - name: Typecheck
        run: |
          yarn g:typecheck

      - name: List changed workspaces
        run: yarn workspaces list --since --recursive --json

      - name: Build-release
        # Till https://github.com/atlassian/changesets/issues/432 has a solution we can remove the
        # build-release and replace with a regular build command
        run: |
          yarn workspaces foreach -tv run build-release

      - name: Check generated dist folder
        run: |
          yarn workspaces foreach -tv run check-dist
        env:
          CI: true

      - name: Unit tests
        run: |
          yarn workspaces foreach -tv --include '@soluble/*' run test-unit --coverage
        env:
          CI: true

      - name: E2E tests
        run: |
          yarn g:test-e2e --coverage
        env:
          CI: true

      - name: Send coverage to codecov.io
        working-directory: {{ github.workspace }}
        if: matrix.node-version == '14.x'
        run: |
          bash .github/scripts/install-codecov.sh
          yarn g:ci-coverage-upload 


